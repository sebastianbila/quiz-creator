{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswerList/AnswerList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswerList/AnswerList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","axios/axios-quiz.js","components/UI/Loader/Loader.js","redux/actions/quiz.js","redux/actions/actionTypes.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","redux/actions/auth.js","containers/Auth/Auth.js","containers/QuizList/QuizList.js","form/formFramework.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","redux/actions/create.js","components/Logout/Logout.js","App.js","serviceWorker.js","redux/reducers/quiz.js","redux/reducers/create.js","redux/reducers/auth.js","redux/reducers/rootReducers.js","index.js"],"names":["module","exports","MenuToggle","props","cls","styles","isOpen","push","open","onClick","onToggle","className","join","Backdrop","Drawer","handleClick","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","isAuthenticated","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","classes","onAnswerClick","answer","id","text","AnswerList","answers","ActiveQuiz","Question","activeQuestion","question","quizLen","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","axios","create","baseURL","Loader","center","fetchQuizesSuccess","quizes","payload","fetchQuizesError","e","error","fetchQuizSuccess","quizSetState","answerState","ifQuizFinished","Quiz","componentDidMount","a","console","log","match","params","fetchQuizById","onAnswerSelectedHandler","answerId","quizAnswerClick","retryQuiz","quizId","QuizWrapper","loading","isFinished","dispatch","get","response","data","getState","rightAnswerId","timeout","window","setTimeout","clearTimeout","Input","inputType","htmlFor","Math","random","isInvalid","valid","touched","shouldValidate","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","onChangeHandler","event","controlName","control","target","validateControl","forEach","item","loginHandler","registerHandler","submitHandler","preventDefault","isValid","trim","is","onSubmit","AuthForm","renderInputs","isLogin","url","API_KEY","authData","returnSecureToken","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","QuizList","fetchQuizes","name","renderQuiz","createControl","config","validateForm","hasOwnProperty","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","context","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","validate","renderControls","selectChangeHandler","select","creator","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a2030530.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2BlOY\",\"close\":\"Drawer_close__1Cl1X\",\"active\":\"Drawer_active__35KPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__OLoE2\",\"open\":\"MenuToggle_open__14SWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__18Rwf\",\"QuizWrapper\":\"Quiz_QuizWrapper__c8INT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__Dpsgu\",\"Question\":\"ActiveQuiz_Question__18iOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3kVbO\",\"success\":\"AnswerItem_success__gTnap\",\"failed\":\"AnswerItem_failed__3GYY-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__D-CkC\",\"success\":\"FinishedQuiz_success__jBBc5\",\"failed\":\"FinishedQuiz_failed__Lvk6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"success\":\"Button_success__cnhtV\",\"failed\":\"Button_failed__34byv\",\"primary\":\"Button_primary__28VL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__ANdA0\",\"lds-dual-ring\":\"Loader_lds-dual-ring__2xzLQ\",\"center\":\"Loader_center__Iyafz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\",\"AuthForm\":\"Auth_AuthForm__3wyhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"invalid\":\"Input_invalid__1XscM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerList\":\"AnswerList_AnswerList__2en9b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__a5VQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3jBmX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2qylT\"};","import React from 'react'\nimport styles from './MenuToggle.module.css'\n\nconst MenuToggle = props => {\n    const cls = [\n        styles.MenuToggle,\n        'fa',\n    ]\n\n    if (props.isOpen) cls.push('fa-times', styles.open)\n    else cls.push('fa-bars')\n\n    return (\n        <i\n            onClick={props.onToggle}\n            className={cls.join(' ')}/>\n    )\n}\n\nexport default MenuToggle","import React from 'react'\nimport styles from './Backdrop.module.css'\n\nconst Backdrop = props => (\n    <div\n        onClick={props.onClick}\n        className={styles.Backdrop}>\n    </div>\n)\n\nexport default Backdrop","import React, {Component} from 'react';\nimport styles from './Drawer.module.css'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport {NavLink} from 'react-router-dom'\n\nclass Drawer extends Component {\n\n    handleClick = () => {\n        this.props.onClose();\n    }\n\n    renderLinks(links) {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink to={link.to} exact={link.exact} activeClassName={styles.active} onClick={this.handleClick}>\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    render() {\n\n        const links = [\n            {to: '/', label: 'List Quiz', exact: true},\n        ]\n\n        if (this.props.isAuthenticated) {\n            links.push({to: '/quiz-creator', label: 'Create quiz', exact: false})\n            links.push({to: 'logout', label: 'Logout', exact: false})\n        } else {\n            links.push({to: '/auth', label: 'Authentication', exact: false})\n        }\n\n        const cls = [styles.Drawer]\n        if (!this.props.isOpen) cls.push(styles.close)\n        return (\n            <React.Fragment>\n                <nav className={cls.join(' ')}>\n                    <ul>\n                        {this.renderLinks(links)}\n                    </ul>\n                </nav>\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Drawer;","import React, {Component} from 'react';\nimport styles from './Layout.module.css'\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\nimport {connect} from \"react-redux\";\n\nclass Layout extends Component {\n    state = {\n        menu: false\n    }\n\n    toggleMenuHandler = () => {\n        this.setState({\n            menu: !this.state.menu\n        })\n    }\n\n    menuCloseHandler = () => {\n        this.setState({\n            menu: false\n        })\n    }\n\n    render() {\n        return (\n            <div className={styles.Layout}>\n\n                <Drawer\n                    onClose={this.menuCloseHandler}\n                    isOpen={this.state.menu}\n                    isAuthenticated={this.props.isAuthenticated}/>\n\n                <MenuToggle\n                    onToggle={this.toggleMenuHandler}\n                    isOpen={this.state.menu}/>\n\n                <main>\n                    {this.props.children}\n                </main>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import React from 'react'\nimport styles from './AnswerItem.module.css'\n\nconst AnswerItem = props => {\n    const classes = [styles.AnswerItem]\n\n    classes.push(styles[props.state])\n\n    return (\n        <li\n            className={classes.join(' ')}\n            onClick={() => props.onAnswerClick(props.answer.id)}>\n            {props.answer.text}\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from 'react'\nimport styles from './AnswerList.module.css'\nimport AnswerItem from './AnswerItem/AnswerItem';\n\nconst AnswerList = props => {\n\n    return (\n        <ul className={styles.AnswerList}>\n\n            {props.answers.map((answer, index) => {\n                return (\n                    <AnswerItem\n                        key={index}\n                        answer={answer}\n                        onAnswerClick={props.onAnswerClick}\n                        state={props.state ? props.state[answer.id] : null}\n                    />\n                )\n            })}\n        </ul>\n    )\n\n}\n\nexport default AnswerList","import React from 'react';\nimport styles from './ActiveQuiz.module.css'\nimport AnswerList from './AnswerList/AnswerList';\n\nconst ActiveQuiz = props => (\n    <div className={styles.ActiveQuiz}>\n        <p className={styles.Question}>\n            <span>\n                <strong>{props.activeQuestion}.</strong>&nbsp;{props.question}\n            </span>\n            <small>{props.activeQuestion} of {props.quizLen}</small>\n        </p>\n\n        <AnswerList\n            answers={props.answers}\n            onAnswerClick={props.onAnswerClick}\n            state={props.state}\n        />\n    </div>\n)\n\nexport default ActiveQuiz\n\n\n\n\n\n","import React from 'react'\nimport styles from './Button.module.css'\n\nconst Button = props => {\n    const cls = [\n        styles.Button,\n        styles[props.type]\n    ]\n    return (\n        <button className={cls.join(' ')}\n                onClick={props.onClick}\n                disabled={props.disabled}>\n            {props.children}\n        </button>\n    )\n\n}\n\nexport default Button","import React from 'react';\nimport styles from './FinishedQuiz.module.css'\nimport Button from \"../UI/Button/Button\";\nimport {Link} from 'react-router-dom'\n\nconst FinishedQuiz = props => {\n\n    const successCount = Object.keys(props.results)\n        .reduce((total, key) => {\n            if (props.results[key] === 'success') total++;\n            return total;\n        }, 0)\n\n    return (\n        <div className={styles.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const cls = [\n                        'fa',\n                        props.results[quizItem.id] === 'failed'\n                            ? 'fa-times' : 'fa-check',\n                        styles[props.results[quizItem.id]]\n                    ]\n\n                    return (\n                        <li\n                            key={index}>\n                            <strong>{index + 1}</strong>.&nbsp;\n                            {quizItem.question}\n                            <i className={cls.join(' ')}/>\n                        </li>\n                    )\n                })}\n            </ul>\n            <p>Correct {successCount} of {props.quiz.length}</p>\n            <div>\n                <Button onClick={props.onRetry} type=\"primary\">Try again</Button>\n                <Link to={'/'}>\n                    <Button type=\"success\">Go to list of tests</Button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default FinishedQuiz\n","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://react-quiz-74bc1.firebaseio.com'\n})","import React from 'react';\nimport styles from './Loader.module.css'\n\nconst Loader = () => {\n    return (\n        <div className={styles.center}>\n            <div className={styles.Loader}/>\n        </div>\n    );\n};\n\nexport default Loader;\n","import axios from '../../axios/axios-quiz'\nimport {\n    FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCESS,\n    FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY,\n    QUIZ_SET_STATE\n} from \"./actionTypes\";\n\nexport function fetchQuizes() {\n    return async dispatch => {\n        dispatch(fetchQuizesStart())\n        try {\n            const response = await axios.get('/quiz.json')\n\n            const quizes = []\n\n            Object.keys(response.data).forEach((key, index) => {\n                quizes.push({\n                    id: key,\n                    name: `Test #${index + 1}`\n                })\n            })\n\n            dispatch(fetchQuizesSuccess(quizes))\n\n        } catch (e) {\n            dispatch(fetchQuizesError(e))\n        }\n    }\n}\n\nexport function fetchQuizById(quizId) {\n    return async dispatch => {\n        dispatch(fetchQuizesStart())\n        try {\n            const response = await axios.get(`/quiz/${quizId}.json`,)\n            const quiz = response.data\n\n            dispatch(fetchQuizSuccess(quiz))\n\n        } catch (e) {\n            dispatch(fetchQuizesError(e))\n        }\n    }\n}\n\nexport function fetchQuizesStart() {\n    return {\n        type: FETCH_QUIZES_START\n    }\n}\n\nexport function fetchQuizesSuccess(quizes) {\n    return {\n        type: FETCH_QUIZES_SUCCESS,\n        payload: quizes\n    }\n}\n\nexport function fetchQuizesError(e) {\n    return {\n        type: FETCH_QUIZES_ERROR,\n        error: e\n    }\n}\n\nexport function fetchQuizSuccess(quiz) {\n    return {\n        type: FETCH_QUIZ_SUCCESS,\n        payload: quiz\n    }\n}\n\nexport function quizSetState(answerState, results) {\n    return {\n        type: QUIZ_SET_STATE,\n        answerState, results\n    }\n\n}\n\nexport function finishQuiz() {\n    return {\n        type: FINISH_QUIZ,\n    }\n}\n\nexport function quizNextQuestion(activeQuestion) {\n    return {\n        type: QUIZ_NEXT_QUESTION,\n        activeQuestion\n    }\n}\n\nexport function quizAnswerClick(answerId) {\n    return (dispatch, getState) => {\n        const state = getState().quiz\n        if (state.answerState) {\n            const key = Object.keys(state.answerState)[0];\n            if (state.answerState[key] === 'success') {\n                return;\n            }\n        }\n\n        const question = state.quiz[state.activeQuestion];\n        const results = state.results;\n        if (question.rightAnswerId === answerId) {\n\n            if (!results[answerId]) {\n                results[question.id] = 'success'\n            }\n\n            dispatch(quizSetState({[answerId]: 'success'}, results))\n\n            const timeout = window.setTimeout(() => {\n                if (ifQuizFinished(state)) {\n                    dispatch(finishQuiz())\n                } else {\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\n                }\n                window.clearTimeout(timeout);\n            }, 1000);\n        } else {\n            results[question.id] = 'failed';\n            dispatch(quizSetState({[answerId]: 'failed'}, results))\n        }\n    }\n}\n\nconst ifQuizFinished = function (state) {\n    return state.activeQuestion + 1 === state.quiz.length\n}\n\nexport function retryQuiz() {\n    return {\n        type: QUIZ_RETRY\n    }\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\n\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\n\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n","import React, {Component} from 'react';\nimport styles from './Quiz.module.css';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\nimport axios from '../../axios/axios-quiz';\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport {connect} from \"react-redux\";\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from \"../../redux/actions/quiz\";\n\nclass Quiz extends Component {\n\n    componentDidMount = async () => {\n        console.log(this.props.match.params.id)\n        this.props.fetchQuizById(this.props.match.params.id)\n    }\n\n    onAnswerSelectedHandler = (answerId) => {\n      this.props.quizAnswerClick(answerId)\n    }\n\n    componentWillUnmount() {\n        this.props.retryQuiz()\n    }\n\n    render() {\n        let quizId = this.props.activeQuestion;\n        return (\n            <div className={styles.Quiz}>\n                <div className={styles.QuizWrapper}>\n                    <h1>Fill out form</h1>\n                    {\n                        this.props.loading || !this.props.quiz ? <Loader/>\n                            : this.props.isFinished\n                            ? <FinishedQuiz\n                                onRetry={this.props.retryQuiz}\n                                quiz={this.props.quiz}\n                                results={this.props.results}/>\n\n                            : <ActiveQuiz\n                                onAnswerClick={this.onAnswerSelectedHandler}\n                                answers={this.props.quiz[quizId].answer}\n                                question={this.props.quiz[quizId].question}\n                                quizLen={this.props.quiz.length}\n                                activeQuestion={this.props.activeQuestion + 1}\n                                state={this.props.answerState}\n                            />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        results: state.quiz.results,\n        isFinished: state.quiz.isFinished,\n        activeQuestion: state.quiz.activeQuestion,\n        answerState: state.quiz.answerState,\n        quiz: state.quiz.quiz,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n        retryQuiz: () => dispatch(retryQuiz())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","import React from 'react';\nimport styles from './Input.module.css'\n\nconst Input = (props) => {\n\n    const inputType = props.type || 'text'\n    const cls = [styles.Input]\n    const htmlFor = `#{inputType}-${Math.random()}`\n\n    function isInvalid({valid, touched, shouldValidate}) {\n        return !valid && shouldValidate && touched\n    }\n\n    if (isInvalid(props)) {\n        cls.push(styles.invalid)\n    }\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <input type={inputType} id={htmlFor} value={props.value} onChange={props.onChange}/>\n\n            {\n                isInvalid(props)\n                    ? <span>{props.errorMessage || 'Invalid value'}</span>\n                    : null\n            }\n\n        </div>\n    );\n};\n\nexport default Input;\n\n\n","import axios from 'axios'\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\n\nexport function auth(email, password, isLogin) {\n    return async dispatch => {\n        const API_KEY = 'AIzaSyA6GbwMsTLChUNWHaY0ISc3pDjtbO2DDNc'\n        let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`\n        const authData = {\n            email, password,\n            returnSecureToken: true\n        }\n\n        if (!isLogin) url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`\n\n        const response = await axios.post(url, authData)\n        const data = response.data\n        console.log(data)\n\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\n\n        localStorage.setItem('token', data.idToken)\n        localStorage.setItem('userId', data.localId)\n        localStorage.setItem('expirationDate', expirationDate)\n\n        dispatch(authSuccess(data.idToken))\n        dispatch(autoLogout(data.expiresIn))\n    }\n}\n\nexport function autoLogout(time) {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, time * 1000)\n    }\n}\n\nexport function logout() {\n    localStorage.removeItem('token')\n    localStorage.removeItem('userId')\n    localStorage.removeItem('expirationDate')\n    return {\n        type: AUTH_LOGOUT\n    }\n}\n\nexport function authSuccess(token) {\n    return {\n        type: AUTH_SUCCESS, token\n    }\n}\n\nexport function autoLogin() {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if (!token) dispatch(logout())\n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date().getTime()) dispatch(logout())\n            else {\n                dispatch(authSuccess(token))\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}\n","import React, {Component} from 'react';\nimport styles from './Auth.module.css'\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport is from 'is_js'\nimport {connect} from \"react-redux\";\nimport {auth} from \"../../redux/actions/auth\";\n\nclass Auth extends Component {\n\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Enter correct email',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true,\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Password',\n                errorMessage: 'Enter correct password',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n        }\n    }\n\n\n    validateControl(value, validation) {\n        if (!validation) return true;\n        let isValid = true;\n\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if (validation.email) {\n            isValid = is.email(value) && isValid\n        }\n\n        if (validation.minLength) {\n            isValid = value.length >= validation.minLength && isValid\n        }\n        return isValid;\n    }\n\n    onChangeHandler = (event, controlName) => {\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n\n        control.value = event.target.value;\n        control.touched = true;\n        control.valid = this.validateControl(control.value, control.validation)\n\n        formControls[controlName] = control;\n\n        let isFormValid = true;\n\n        Object.keys(formControls).forEach(item => {\n            isFormValid = formControls[item].valid && isFormValid\n        })\n\n        this.setState({formControls, isFormValid});\n    }\n\n    loginHandler = () => {\n        this.props.auth(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            true\n        )\n    }\n\n    registerHandler = () => {\n        this.props.auth(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            false\n        )\n    }\n\n    submitHandler = event => {\n        event.preventDefault();\n    }\n\n    renderInputs() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n            return (\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    errorMessage={control.errorMessage}\n                    shouldValidate={!!control.validation}\n                    onChange={event => this.onChangeHandler(event, controlName)}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className={styles.Auth}>\n                <div>\n                    <h1>Authentication</h1>\n                    <form onSubmit={this.submitHandler} className={styles.AuthForm}>\n\n                        {this.renderInputs()}\n\n                        <Button type=\"success\"\n                                onClick={this.loginHandler}\n                                disabled={!this.state.isFormValid}>Login</Button>\n                        <Button\n                            type=\"primary\"\n                            onClick={this.registerHandler}\n                            disabled={!this.state.isFormValid}>Registration</Button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        auth:  (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n    }\n\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);\n\n","import React, {Component} from 'react';\nimport styles from './QuizList.module.css'\nimport {NavLink} from 'react-router-dom'\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport {connect} from \"react-redux\";\nimport {fetchQuizes} from \"../../redux/actions/quiz\";\n\nclass QuizList extends Component {\n\n    renderQuiz() {\n        return this.props.quizes.map(quiz => {\n            return (\n                <li key={quiz.id}>\n                    <NavLink to={'/quiz/' + quiz.id}>\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    componentDidMount =  () => {\n        this.props.fetchQuizes();\n    };\n\n    render() {\n        return (\n            <div className={styles.QuizList}>\n                <div>\n                    <h1>Quiz List</h1>\n\n                    {this.props.loading || !this.props.quizes ?\n                        <Loader/> :\n                        <ul>\n                            {this.renderQuiz()}\n                        </ul>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        quizes: state.quiz.quizes,\n        loading: state.quiz.loading\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizes: () => dispatch(fetchQuizes())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);","export function createControl(config, validation) {\n    return {\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n        value: '',\n    }\n}\n\nexport function validate(value, validation = null) {\n    if (!validation) return true\n    let isValid = true;\n    if (validation.required) isValid = value.trim() !== '' && isValid\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true\n\n    for (let control in formControls){\n        if (formControls.hasOwnProperty(control)){\n            isFormValid = formControls[control].valid && isFormValid\n        }\n    }\n    return isFormValid\n}","import React from 'react';\nimport styles from './Select.module.css'\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`\n    return (\n        <div className={styles.Select}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <select id={htmlFor}\n                    value={props.value}\n                    onChange={props.onChange}\n            >\n                {props.options.map((option, index) => {\n                    return (\n                        <option key={option.value + index} value={option.value}>{option.text}</option>\n                    )\n                })}\n            </select>\n        </div>\n    );\n};\n\nexport default Select;\n","import React, {Component} from 'react';\nimport styles from './QuizCreator.module.css';\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport {createControl, validate, validateForm} from '../../form/formFramework';\nimport Select from \"../../components/UI/Select/Select\";\nimport axios from '../../axios/axios-quiz'\nimport {connect} from \"react-redux\";\nimport {createQuizQuestion, finishCreateQuiz} from \"../../redux/actions/create\";\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Option ${number}`,\n        errorMessage: 'Value must not be empty',\n        id: number\n    }, {required: true})\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Enter question',\n            errorMessage: 'Question must be not empty'\n        }, {required: true}),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4),\n    }\n}\n\nclass QuizCreator extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls(),\n        }\n    }\n\n    submitHandler = event => {\n        event.preventDefault();\n    }\n\n    addQuestionHandler = event => {\n        event.preventDefault();\n\n        const {question, option1, option2, option3, option4} = this.state.formControls\n\n        const questionItem = {\n            question: question.value,\n            id: this.props.quiz.length + 1,\n            rightAnswerId: this.state.rightAnswerId,\n            answer: [\n                {text: option1.value, id: option1.id},\n                {text: option2.value, id: option2.id},\n                {text: option3.value, id: option3.id},\n                {text: option4.value, id: option4.id},\n            ]\n        }\n\n        this.props.createQuizQuestion(questionItem)\n\n        this.setState({\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls(),\n        });\n    }\n\n    createQuizHandler = event => {\n        event.preventDefault()\n\n        this.setState({\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls(),\n        });\n\n        this.props.finishCreateQuiz()\n    }\n\n    changeHandler = (value, controlName) => {\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n\n        control.touched = true\n        control.value = value\n        control.valid = validate(control.value, control.validation)\n\n        formControls[controlName] = control\n        this.setState({\n            formControls,\n            isFormValid: validateForm(formControls)\n        });\n\n    }\n\n    renderControls = () => {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n            return (\n                <React.Fragment key={controlName + index}>\n                    <Input\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n                    {index === 0 ? <hr/> : null}\n                </React.Fragment>\n            )\n        })\n    }\n\n    selectChangeHandler = event => {\n        console.log(event.target.value)\n        this.setState({\n            rightAnswerId: +event.target.value\n        });\n    }\n\n\n    render() {\n        const select = <Select label=\"Choice right answer\"\n                               value={this.state.rightAnswerId}\n                               onChange={this.selectChangeHandler}\n                               options={[\n                                   {text: 1, value: 1},\n                                   {text: 2, value: 2},\n                                   {text: 3, value: 3},\n                                   {text: 4, value: 4},\n                               ]}\n        />\n        return (\n            <div className={styles.QuizCreator}>\n                <div>\n                    <h1>Creating tests</h1>\n                    <form onSubmit={this.submitHandler}>\n\n                        {this.renderControls()}\n\n                        {select}\n\n\n                        <Button type=\"primary\"\n                                onClick={this.addQuestionHandler}\n                                disabled={!this.state.isFormValid}>\n                            Add question\n                        </Button>\n                        <Button type=\"success\"\n                                onClick={this.createQuizHandler}\n                                disabled={this.props.quiz.length === 0}>\n                            Create quiz\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quiz: state.creator.quiz\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\n        finishCreateQuiz: () => dispatch(finishCreateQuiz()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\nimport axios from '../../axios/axios-quiz'\n\nexport function createQuizQuestion(item) {\n    return {\n        type: CREATE_QUIZ_QUESTION,\n        item\n    }\n}\n\nexport function resetQuizCreation() {\n    return {\n        type: RESET_QUIZ_CREATION\n    }\n}\n\nexport function finishCreateQuiz() {\n    return async (dispatch, getState) => {\n        await axios.post('/quiz.json', getState().creator.quiz)\n        dispatch(resetQuizCreation())\n    }\n}","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {logout} from \"../../redux/actions/auth\";\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        this.props.logout()\n    }\n\n    render() {\n        return <Redirect to='/'/>\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        logout: () => dispatch(logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, {Component} from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport Quiz from './containers/Quiz/Quiz';\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom'\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport {connect} from \"react-redux\";\nimport Logout from \"./components/Logout/Logout\";\nimport {autoLogin} from \"./redux/actions/auth\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.autoLogin()\n    }\n\n    render() {\n\n        let routes = (\n            <Switch>\n                <Route path=\"/auth\" component={Auth}/>\n                <Route path=\"/quiz/:id\" component={Quiz}/>\n                <Route path=\"/\" component={QuizList}/>\n                <Redirect to='/'/>\n            </Switch>\n        )\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path=\"/quiz-creator\" component={QuizCreator}/>\n                    <Route path=\"/quiz/:id\" component={Quiz}/>\n                    <Route path='/logout' component={Logout}/>\n                    <Route path=\"/\" exact component={QuizList}/>\n                    <Redirect to='/'/>\n                </Switch>\n            )\n        }\n        return (\n            <div>\n                <Layout>\n                    {routes}\n                </Layout>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        autoLogin: () => dispatch(autoLogin())\n    }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY,\n    QUIZ_SET_STATE\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n    quizes: [],\n    loading: false,\n    error: null,\n    results: {}, // { [id] : 'success' : 'failed' }\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // { [id]: 'success' : 'failed' }\n    quiz: null,\n}\n\nexport default function quizReducer(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_QUIZES_START:\n            return {\n                ...state, loading: true\n            }\n        case FETCH_QUIZES_SUCCESS:\n            return {\n                ...state, loading: false, quizes: action.payload\n            }\n        case FETCH_QUIZES_ERROR:\n            return {\n                ...state, loading: false, error: action.error\n            }\n        case FETCH_QUIZ_SUCCESS:\n            return {\n                ...state, loading: false, quiz: action.payload\n            }\n        case QUIZ_SET_STATE:\n            return {\n                ...state, loading: false,\n                answerState: action.answerState,\n                results: action.results\n            }\n        case FINISH_QUIZ:\n            return {\n                ...state, loading: false, isFinished: true\n            }\n        case QUIZ_NEXT_QUESTION:\n            return {\n                ...state, loading: false,\n                answerState: null,\n                activeQuestion: action.activeQuestion\n            }\n        case QUIZ_RETRY:\n            return {\n                ...state,\n                activeQuestion: 0,\n                answerState: null,\n                isFinished: false,\n                results: {}\n            }\n        default:\n            return state\n    }\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\n\nconst initialState = {\n    quiz: []\n}\n\nexport default function createReducer(state = initialState, action) {\n    switch (action.type) {\n        case CREATE_QUIZ_QUESTION:\n            return {\n                ...state,\n                quiz: [...state.quiz, action.item]\n            }\n        case RESET_QUIZ_CREATION:\n            return {\n                ...state, quiz: []\n            }\n        default:\n            return state\n    }\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\n\nconst initialState = {\n    token: null\n}\n\nexport default function authReducer(state = initialState, action) {\n    switch (action.type) {\n        case AUTH_SUCCESS:\n            return {\n                ...state, token: action.token\n            }\n        case AUTH_LOGOUT:\n            return {\n                ...state, token: null\n            }\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport quizReducer from \"./quiz\";\nimport createReducer from \"./create\";\nimport authReducer from \"./auth\";\n\nexport default combineReducers({\n    quiz: quizReducer,\n    creator: createReducer,\n    auth: authReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducers from \"./redux/reducers/rootReducers\";\nimport thunk from 'redux-thunk'\n\n// Enable Redux dev tools\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}